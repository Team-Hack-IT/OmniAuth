openapi: 3.0.0
info:
    title: Omni Auth User API
    description: Documentation for the endpoint of the omni auth user API
    version: 1.0.0
paths:
    /api/signup:
        post:
            summary: Create a new user
            description: Endpoint to create a new user.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/User"
            responses:
                "201":
                    description: User created successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserSignUp"
                "400":
                    description: Invalid request payload
                "500":
                    description: Internal server error

    /api/user/profile:
        get:
            summary: Get user profile
            description: Endpoint to get the profile of the authenticated user.
            responses:
                "200":
                    description: User profile retrieved successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
                "401":
                    description: Unauthorized access
                "500":
                    description: Internal server error

    /api/user/update-password:
        post:
            summary: Update user password
            description: Endpoint to update the password of the authenticated user.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
            responses:
                "200":
                    description: Password updated successfully
                "400":
                    description: Invalid request payload
                "401":
                    description: Unauthorized access
                "500":
                    description: Internal server error
            example:
                currentPassword: oldpassword123
                newPassword: newpassword123

    /api/user/update-email:
        post:
            summary: Update user email
            description: Endpoint to update the email of the authenticated user.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
            responses:
                "200":
                    description: Email updated successfully
                "400":
                    description: Invalid request payload
                "401":
                    description: Unauthorized access
                "500":
                    description: Internal server error

    /api/user/delete:
        delete:
            summary: Delete user
            description: Endpoint to delete the authenticated user.
            responses:
                "200":
                    description: User deleted successfully
                "401":
                    description: Unauthorized access
                "500":
                    description: Internal server error

    /api/user/update:
        post:
            summary: Update user
            description: Endpoint to update the details of the authenticated user.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UpdateUserRequest"
            responses:
                "200":
                    description: User updated successfully
                "400":
                    description: Invalid request payload
                "401":
                    description: Unauthorized access
                "500":
                    description: Internal server error

    /api/user/verify-phone:
        post:
            summary: Verify phone number
            description: Endpoint to verify the phone number of the authenticated user. Phone number must follow the E.164 format.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                phone:
                                    type: string
            responses:
                "200":
                    description: Phone number verified successfully
                "400":
                    description: Invalid request payload
                "401":
                    description: Unauthorized access
                "500":
                    description: Internal server error

    /api/user/logout-all:
        get:
            summary: Logout from all devices
            description: Endpoint to logout the authenticated user from all devices.
            responses:
                "200":
                    description: User logged out from all devices successfully
                "401":
                    description: Unauthorized access
                "500":
                    description: Internal server error

    /api/user/logout:
        get:
            summary: Logout
            description: Endpoint to logout the authenticated user.
            responses:
                "200":
                    description: User logged out successfully
                "401":
                    description: Unauthorized access
                "500":
                    description: Internal server error

    /api/user/verify-id:
        post:
            summary: Verify user identity
            description: Endpoint to verify the identity of the authenticated user.
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                idCard:
                                    type: string
                                    format: binary
            responses:
                "200":
                    description: Identity verified successfully
                "400":
                    description: Invalid request payload
                "401":
                    description: Unauthorized access
                "500":
                    description: Internal server error

    /api/user/files/upload/{type}:
        post:
            summary: Upload file
            description: Endpoint to upload a file for the authenticated user.
            parameters:
                - in: path
                  name: type
                  required: true
                  schema:
                      $ref: "#/components/schemas/FileType"
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
            responses:
                "200":
                    description: File uploaded successfully
                "400":
                    description: Invalid request payload
                "401":
                    description: Unauthorized access
                "409":
                    description: File already exists
                "413":
                    description: File too large
                "500":
                    description: Internal server error

    /api/user/files/download/{type}:
        get:
            summary: Download file
            description: Endpoint to download a specified file for the authenticated user.
            parameters:
                - in: path
                  name: type
                  required: true
                  schema:
                      $ref: "#/components/schemas/FileType"
            responses:
                "200":
                    description: File downloaded successfully
                "401":
                    description: Unauthorized access
                "500":
                    description: Internal server error

    /api/user/upload-picture:
        post:
            summary: Upload picture
            description: Endpoint to upload a picture for the authenticated user.
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                picture:
                                    type: string
                                    format: binary
            responses:
                "200":
                    description: Picture uploaded successfully
                "400":
                    description: Invalid request payload
                "401":
                    description: Unauthorized access
                "409":
                    description: Picture already exists
                "413":
                    description: Picture too large
                "500":
                    description: Internal server error

    /api/user/files/delete/{type}:
        delete:
            summary: Delete file
            description: Endpoint to delete a specified file for the authenticated user.
            parameters:
                - in: path
                  name: type
                  required: true
                  schema:
                      $ref: "#/components/schemas/FileType"
            responses:
                "200":
                    description: File deleted successfully
                "401":
                    description: Unauthorized access
                "500":
                    description: Internal server error

    /api/user/services/get-all-business:
        get:
            summary: Get all business
            description: Endpoint to get all business for the authenticated user.
            responses:
                "200":
                    description: Business retrieved successfully
                    schema:
                        type: array
                        items:
                            $ref: "#/components/schemas/Business"
                "401":
                    description: Unauthorized access
                "500":
                    description: Internal server error

components:
    schemas:
        User:
            type: object
            properties:
                address:
                    type:
                        - string
                        - null
                birthDate:
                    type:
                        - string
                        - null
                city:
                    type:
                        - string
                        - null
                country:
                    type: string
                createdAt:
                    type: string
                document:
                    type:
                        - object
                        - null
                email:
                    type: string
                firstname:
                    type: string
                history:
                    type:
                        - object
                        - null
                id:
                    type: string
                isVerified:
                    type: boolean
                    default: false
                lastname:
                    type: string
                phone:
                    type:
                        - string
                        - null
                picture:
                    type:
                        - string
                        - null
                postalCode:
                    type:
                        - string
                        - null
                role: "user"
                state:
                    type:
                        - string
                        - null
                updatedAt:
                    type: string

        Business:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                address:
                    type: string
                industry:
                    type: string
                website:
                    type: string
                scope:
                    type: object

        UserSignUp:
            type: object
            properties:
                email:
                    type: string
                firstname:
                    type: string
                lastname:
                    type: string
                country:
                    type: string
                address:
                    type: string
                state:
                    type: string
                birthDate:
                    type: string
                    format: date
                postalCode:
                    type: string

        FileType:
            type: string
            enum:
                - picture
                - idCard
                - driverLicense
                - passport

        UpdateUserRequest:
            type: object
            properties:
                firstname:
                    type: string
                lastname:
                    type: string
                email:
                    type: string
                country:
                    type: string
                address:
                    type: string
                state:
                    type: string
                birthDate:
                    type: string
                    format: date
                postalCode:
                    type: string
